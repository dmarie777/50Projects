@import url('https://fonts.googleapis.com/css2?family=Electrolize&display=swap');

*,
*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
}

:root {
    --col: 18;
    --x: 50;
    --y: 50;
    --background: rgb(27, 27, 27);
    --mainColor: #FFB703;
    --height: 70px;
}

body {
    position: relative;
    overflow: hidden;
    /* background:  */
    /* top layer */
    /* linear-gradient(
        var(--background),
        var(--background)
    ) no-repeat; */
}

.mainSection {
    position: absolute;
    display: flex;
    min-width: 100vw;
    min-height: 100vh;
    color: white;
    align-items: flex-start;
    justify-content: flex-end;
    flex-direction: column;
    z-index: 1;
    font-family: "Electrolize", serif;
    font-size: 1.5rem;
}

.mainSection__svg {
    position: absolute;
    width: 100vw;
    display: flex; 
    justify-content: flex-end; 
    align-items: center; 
    height: 100%;
}

.svgLines { 
    width: 80vw; 
    height: auto; 
}

.mainSection__title {
    width: 100vw;
    display: flex;
    justify-content: flex-end; 
}

.mainSection__title h1 {
    background: linear-gradient(
        rgb(255, 255, 255),
        rgb(255, 255, 255)
    );
    color: transparent;
    text-shadow: 
    0 0 40px #073371;
    background-clip: text;
    font-weight: 700;
    text-transform: uppercase;
    width: 80vw;
    margin: 2rem 0;
    z-index: 1;
}

.mainSection__title span:hover {
    animation: shake 0.5s infinite;
}

.mainSection__buttons {
    width: 100vw;
    display: flex;
    justify-content: flex-end;
}

.buttonsContainer {
    width: 80vw;
    display: flex;
    flex-wrap: wrap;    
    gap: 8vw;
    padding-right: 5rem;
    padding-bottom: 5rem;
}

.buttons__brokenCorner { 
    min-width: calc(var(--height) * 2);
    font-family: Helvetica, sans-serif, Arial;
    letter-spacing: 0.4rem;
    z-index: 0;
    background: transparent;
    padding: 10px 10px; 
    font-size: 0.9rem; 
    font-weight: 300;
    color: #d8d9db; 
    backdrop-filter: blur(5px); 
    border: 1px solid rgba(221, 223, 222, 0.861); 
    border-radius: 5px; 
    text-align: center; 
    cursor: pointer; 
    clip-path: polygon(0 0, 100% 0, 100% 100%, 85% 90%, 70% 100%, 0 100%);
    overflow: hidden; 
} 

button span {
    border: 1px solid transparent;
    inset: 2;
    height: 100%;
    width: 100%;
    z-index: 0;
    position: relative;
}

button:hover {
    border: 1px solid transparent;
    z-index: 0;
    background: 
        linear-gradient(
            var(--background),
            var(--background)
        ) no-repeat padding-box,
        radial-gradient(
            50px 50px at center,
            hsl(var(--x) 80% 80%) 20%,
            hsl(var(--x) 80% 20%) 100%,
            transparent 100%
        ) ;
        animation: shake 0.5s infinite;
}

button span:hover{
    width: 100%;
    z-index: 1000;
    height: 100%;
    border: 1px solid transparent;
    background: 
    radial-gradient(
        50px 50px at center,
        hsl(var(--x) 80% 80%) 20%,
        hsl(var(--x) 80% 20%) 100%,
        transparent 100%
    );
    background-clip: text;
    color: transparent;
}

@keyframes shake {
    0% { 
        transform: translateX(0);
        text-shadow: 0 0 0 transparent, 0 0 0 transparent, 0 0 0 transparent;
     } 
    25% { 
        transform: translateX(-1px); 
        text-shadow: 0 0 0 transparent, 0 0 0 transparent, 2px 0 0 var(--mainColor); 

    } 
    50% { 
        transform: translateX(1px); 
        text-shadow: 0 0 0 transparent, 2px 0 0 var(--mainColor), 0 0 0 transparent;
    } 
    75% { 
        transform: translateX(-1px); 
    } 
    100% {
        transform: translateX(0);
        text-shadow: 0 0 0 transparent, 0 0 0 transparent, 0 0 0 transparent;
    } 
} 
    


.container {
    position: relative;
    height: 100vh;
    width: 100vw;
    display: grid;
    max-height: 100vh;
    grid-template-columns: repeat(var(--col), 1fr);
    overflow: hidden;
    z-index: 0;
    /* light */
    background: 
        radial-gradient(
            150px 150px at calc(var(--x) * 1px) calc(var(--y) * 1px),
            hsl(43 var(--x) 80%) 0%,
            hsl(43 calc(sin(var(--x)) * 50) 15%),
            transparent 100%
        )  no-repeat fixed;
}

.grid {
    border: 1px solid transparent;
    position: relative;
    /* background: 
    linear-gradient(
        var(--background),
        var(--background)
    ) no-repeat padding-box; */
}

/* .dg { 
    position: absolute; 
    z-index: 9999; 
 } */